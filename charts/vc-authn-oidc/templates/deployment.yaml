apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "global.fullname" . }}
  labels:
    {{- include "vc-authn-oidc.labels" . | nindent 4 }}
  annotations:
    checksum/db-api-secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
    checksum/agent-secrets: {{ include (print $.Template.BasePath "/agent/secrets.yaml") . | sha256sum }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "vc-authn-oidc.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "vc-authn-oidc.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "vc-authn-oidc.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.serviceAccount.automountServiceAccountToken }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: jwt-token
          secret:
            secretName: {{ include "vc-authn-oidc.token.secretName" . }}
            defaultMode: 256
        - name: auth-session-ttl
          configMap:
            name: vc-authn-oidc-session-timeout
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DB_HOST
              value: "{{ .Release.Name }}-mongodb-headless.{{ .Release.Namespace }}.svc.cluster.local"
            - name: DB_PORT
              value: {{ .Values.mongodb.service.ports.mongodb | quote }}
            - name: DB_NAME
              value: {{ first .Values.mongodb.auth.databases }}
            - name: OIDC_CONTROLLER_DB_USER
              value: {{ first .Values.mongodb.auth.usernames }}
            - name: OIDC_CONTROLLER_DB_USER_PWD
              valueFrom:
                secretKeyRef:
                  name: {{ include "vc-authn-oidc.databaseSecretName" . }}
                  key: mongodb-passwords
            - name: CONTROLLER_URL
              value: {{ include "vc-authn-oidc.url" . }}
            - name: CONTROLLER_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "vc-authn-oidc.apiSecretName" . }}
                  key: controllerApiKey
            - name: CONTROLLER_CAMERA_REDIRECT_URL
              value: {{ .Values.controller.cameraRedirectUrl }}
            - name: CONTROLLER_PRESENTATION_EXPIRE_TIME
              value: {{ .Values.controller.presentationExpireTime | quote }}
            - name: CONTROLLER_SESSION_TIMEOUT_CONFIG_FILE
              value: /home/aries/sessiontimeout.json
            - name: CONTROLLER_PRESENTATION_CLEANUP_TIME
              value: {{ .Values.controller.sessionTimeout.duration | quote }}
            - name: ACAPY_AGENT_URL
              value: {{ include "acapy.agent.url" . }}
            - name: ACAPY_ADMIN_URL
              value: {{ include "acapy.internal.admin.url" . }}
            - name: INVITATION_LABEL
              value: {{ .Values.invitationLabel | quote }}
            - name: USE_OOB_PRESENT_PROOF
              value: {{ .Values.useOobPresentProof | quote }}
            - name: USE_URL_DEEP_LINK
              value: {{ .Values.useUrlDeepLink | quote }}
            - name: WALLET_DEEP_LINK_PREFIX
              value: {{ .Values.walletDeepLinkPrefix }}
            - name: SET_NON_REVOKED
              value: {{ .Values.setNonRevoked | quote }}
            - name: ACAPY_TENANCY
              value: {{ .Values.acapyTenancyMode }}
            {{- if eq .Values.acapyTenancyMode "single" }}
            - name: ST_ACAPY_ADMIN_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "acapy.secretName" . }}
                  key: adminApiKey
            - name: ST_ACAPY_ADMIN_API_KEY_NAME
              value: "x-api-key"
            {{- else }}
            - name: MT_ACAPY_WALLET_ID
              value: {{ (index .Values "acapy" "argfile.yml" "wallet-name" ) }}
            - name: MT_ACAPY_WALLET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "acapy.secretName" . }}
                  key: walletKey
            {{- end }}
            - name: SIGNING_KEY_FILEPATH
              value: {{ printf "/opt/token/%s" .Values.auth.token.privateKey.filename }}
            - name: LOG_LEVEL
              value: {{ .Values.logLevel | quote }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: jwt-token
              mountPath: /opt/token
            - name: auth-session-ttl
              mountPath: /home/aries/sessiontimeout.json
              subPath: sessiontimeout.json
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
